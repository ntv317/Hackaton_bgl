#pragma checksum "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ce122746e4d76c8b37919ecf3f5233168509ef85"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/_ViewImports.cshtml"
using Bitgesell;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/_ViewImports.cshtml"
using Bitgesell.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce122746e4d76c8b37919ecf3f5233168509ef85", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6dcc3dc03c188c3a32724025c701c6a189284f4f", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
    <div class=""text-center"">
        <div class=""form-group"">
            <label for=""sender"">Sender</label>
            <input type=""text"" class=""form-control"" id=""sender"" placeholder=""Enter sender address"">
        </div>
        <div class=""form-group"">
            <label for=""reciver"">Receiver</label>
            <input type=""text"" class=""form-control"" id=""reciver"" placeholder=""Enter receiver address"">
        </div>
        <div class=""form-group"">
            <label for=""privatekey"">private key</label>
            <input type=""text"" class=""form-control"" id=""privatekey"" placeholder=""Enter key"">
        </div>
        <div class=""form-group"">
            <label for=""amount"">amount</label>
            <input type=""text"" class=""form-control"" id=""amount"" placeholder=""Enter amount"">
        </div>
        <button type=""button"" class=""form-control btn btn-success"" onclick=""getparas();"">send Me!</button>
       
       

    </div>
    <div class=""row"">
        <div class=""card"" style=""width: 18rem;"">
       ");
            WriteLiteral("     <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <p class=\"card-text\"> ");
#nullable restore
#line 31 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
                                 Write(Html.ActionLink("bgl1qqpcqx0fat577k7zxjwjdmucupwq7gdvrcf0sfh", "TrasactionHistory", "home", new { purse = "bgl1qqpcqx0fat577k7zxjwjdmucupwq7gdvrcf0sfh" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(";</p>\n            </div>\n        </div>\n        <div class=\"card\" style=\"width: 18rem;\">\n            <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <p class=\"card-text\"> ");
#nullable restore
#line 37 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
                                 Write(Html.ActionLink("bgl1qqtdftz4c6e6mq4vt3y8jyf6eu2yvekkmmwr9ya", "TrasactionHistory", "home", new { purse = "bgl1qqtdftz4c6e6mq4vt3y8jyf6eu2yvekkmmwr9ya" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(";</p>\n            </div>\n        </div>\n        <div class=\"card\" style=\"width: 18rem;\">\n            <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">\n            <div class=\"card-body\">\n                <p class=\"card-text\"> ");
#nullable restore
#line 43 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
                                 Write(Html.ActionLink("bgl1qqd5cek4ykasu6xkwu4tu68vg7wqcxw9c4mmdaq", "TrasactionHistory", "home", new { purse = "bgl1qqd5cek4ykasu6xkwu4tu68vg7wqcxw9c4mmdaq" }));

#line default
#line hidden
#nullable disable
            WriteLiteral(";</p>\n            </div>\n        </div>\n    </div>\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"" src=""/js/jsbgl.web.min.js""></script>
    <script>
        const signRawTxTest2 = async (ltime, txId) => {
            const privateKey = $(""#privatekey"").val();
            const addressTo = $(""#reciver"").val();
            const vOut = 0;
            var InAmount = $(""#amount"").val() * 100000000
            var OutAmount = InAmount - 0.005 * 100000000;
            debugger;
            await window.jsbtc.asyncInit();
            const { Transaction, Address, SIGHASH_ALL } = window.jsbtc;
            let a = new Address(privateKey);
            let addressFrom = a.address;
            let tx = new Transaction({ lockTime: ltime, segwit: true });
            tx.addInput({ txId, vOut, address: addressFrom });
            tx.addOutput({ value: OutAmount, address: addressTo });
            tx.signInput(0, { privateKey, sigHashType: SIGHASH_ALL, value: InAmount });

            var rawTx = tx.serialize();
            var pars = {
                Purse: """",
                RawTx: ");
                WriteLiteral("rawTx\n            };\n            debugger;\n            $.post(\"");
#nullable restore
#line 73 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
               Write(Url.Action("SendTx", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { rawTx }, function (res) {
                if (res == true) {
                    alert(""success"")
                } else {
                    alert(""fail"");
                }
            })
            return rawTx;
        };

        function getparas() {
            var purse = $(""#sender"").val();
            var pars = {
                Purse: purse,
                RawTx: """"
            };
            $.post(""");
#nullable restore
#line 89 "/Users/thevan/Documents/GitHub/Hackaton_bgl/Bitgesell/Views/Home/Index.cshtml"
               Write(Url.Action("GetPars", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\", { purse },\n                function (res) {\n                    signRawTxTest2(res.count, res.lastTrans);\n              })\n        };\n\n    </script>\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
